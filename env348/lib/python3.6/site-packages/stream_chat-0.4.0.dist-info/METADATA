Metadata-Version: 2.1
Name: stream-chat
Version: 0.4.0
Summary: Client for Stream Chat.
Home-page: http://github.com/GetStream/chat-py
Author: Tommaso Barbugli
Author-email: support@getstream.io
License: UNKNOWN
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development
Classifier: Development Status :: 5 - Production/Stable
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*
Description-Content-Type: text/markdown
Requires-Dist: pycryptodomex (==3.8.1)
Requires-Dist: requests (<3,>=2.3.0)
Requires-Dist: pyjwt (==1.7.1)
Requires-Dist: six (>=1.8.0)
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

# stream-chat-python 

[![Build Status](https://travis-ci.com/GetStream/stream-chat-python.svg?token=WystDPP9vxKnwsd8NwW1&branch=master)](https://travis-ci.com/GetStream/stream-chat-python) [![codecov](https://codecov.io/gh/GetStream/stream-chat-python/branch/master/graph/badge.svg?token=DM7rr9M7Kl)](https://codecov.io/gh/GetStream/stream-chat-python) [![PyPI version](https://badge.fury.io/py/stream-chat.svg)](http://badge.fury.io/py/stream-chat)

the official Python API client for [Stream chat](https://getstream.io/chat/) a service for building chat applications.

You can sign up for a Stream account at https://getstream.io/chat/get_started/.

You can use this library to access chat API endpoints server-side, for the client-side integrations (web and mobile) have a look at the Javascript, iOS and Android SDK libraries (https://getstream.io/chat/).

### Installation

stream-chat-python supports:

- Python (3.4, 3.5, 3.6, 3.7)

#### Install from Pypi

```bash
pip install stream-chat
```

### Documentation

[Official API docs](https://getstream.io/chat/docs/)  

### How to build a chat app with Python tutorial

[Chat with Python, Django and React](https://github.com/GetStream/python-chat-example)

### Supported features

- Chat channels 
- Messages
- Chat channel types 
- User management 
- Moderation API 
- Push configuration 
- User devices 
- User search
- Channel search

### Quickstart

```python
chat = StreamChat(api_key="STREAM_KEY", api_secret="STREAM_SECRET")

# add a user
chat.update_user({"id": "chuck", "name": "Chuck"})

# create a channel about kung-fu
channel = chat.channel("messaging", "kung-fu")
channel.create("chuck")

# add a first message to the channel
channel.send_message({"text": "AMA about kung-fu"})

```

### Contributing

First, make sure you can run the test suite. Tests are run via py.test

```bash
STREAM_KEY=my_api_key STREAM_SECRET=my_api_secret py.test stream_chat/ -v
```

Install black and pycodestyle

```
pip install black
pip install pycodestyle
```


### Releasing a new version

In order to release new version you need to be a maintainer on Pypi.

- Update CHANGELOG
- Make sure you have twine installed (pip install twine)
- Update the version on setup.py
- Commit and push to Github
- Create a new tag for the version (eg. `v2.9.0`)
- Create a new dist with python `python setup.py sdist`
- Upload the new distributable with wine `twine upload dist/stream-chat-VERSION-NAME.tar.gz`

If unsure you can also test using the Pypi test servers `twine upload --repository-url https://test.pypi.org/legacy/ dist/stream-chat-VERSION-NAME.tar.gz`


